// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  ip        String   @unique
  country   String
  city      String
  loc       String
  postal    String
  state     String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  Vote      Vote[]

  @@unique([ip, country, city, loc, postal, state])
}

model Survey {
  id        String   @id @default(uuid())
  title     String   @unique
  options   String[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  Vote      Vote[]
  Asset     Asset[]
}

model Vote {
  id        String   @id @default(uuid())
  for       String
  user      User     @relation(fields: [userId], references: [id])
  survey    Survey   @relation(fields: [surveyId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  userId    String
  surveyId  String

  @@unique([userId, surveyId])
}

model Asset {
  id        String   @id @default(uuid())
  src       String
  survey    Survey   @relation(fields: [surveyId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  surveyId  String
}
